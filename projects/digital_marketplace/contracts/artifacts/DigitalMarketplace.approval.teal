#pragma version 10

// This TEAL was generated by TEALScript v0.91.1
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
int 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *call_DeleteApplication *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	err

// createApplication(uint64,uint64)void
*abi_route_createApplication:
	// assetId: uint64
	txna ApplicationArgs 2
	btoi

	// unitaryPrice: uint64
	txna ApplicationArgs 1
	btoi

	// execute createApplication(uint64,uint64)void
	callsub createApplication
	int 1
	return

// createApplication(unitaryPrice: uint64, assetId: AssetID): void
//
// Manejar la creaci칩n de la aplicaci칩n
//
// @param unitaryPrice El precio al que se vender치 el asset
// @param assetId El id del asset que se vender치
createApplication:
	proto 2 0

	// contracts/DigitalMarketplace.algo.ts:15
	// this.unitaryPrice.value = unitaryPrice
	byte 0x756e69746172795072696365 // "unitaryPrice"
	frame_dig -1 // unitaryPrice: uint64
	app_global_put

	// contracts/DigitalMarketplace.algo.ts:16
	// this.assetId.value = assetId
	byte 0x61737365744964 // "assetId"
	frame_dig -2 // assetId: AssetID
	app_global_put
	retsub

// setPrice(uint64)void
*abi_route_setPrice:
	// unitaryPrice: uint64
	txna ApplicationArgs 1
	btoi

	// execute setPrice(uint64)void
	callsub setPrice
	int 1
	return

// setPrice(unitaryPrice: uint64): void
//
//
// Metodo para modificar el precio de venta
setPrice:
	proto 1 0

	// contracts/DigitalMarketplace.algo.ts:26
	// assert(this.txn.sender === this.app.creator)
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	pop
	==
	assert

	// contracts/DigitalMarketplace.algo.ts:27
	// this.unitaryPrice.value = unitaryPrice
	byte 0x756e69746172795072696365 // "unitaryPrice"
	frame_dig -1 // unitaryPrice: uint64
	app_global_put
	retsub

// optInToAsset(pay)void
*abi_route_optInToAsset:
	// mbrTxn: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// execute optInToAsset(pay)void
	callsub optInToAsset
	int 1
	return

// optInToAsset(mbrTxn: PayTxn): void
//
//
// Metodo para que el contrato haga optin al asset y reciba los assets a vender
// @param mbrTxn La transaccion para cubrir el balance minimo del contrato
optInToAsset:
	proto 1 0

	// contracts/DigitalMarketplace.algo.ts:36
	// assert(this.txn.sender === this.app.creator)
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	pop
	==
	assert

	// contracts/DigitalMarketplace.algo.ts:37
	// assert(!this.app.address.isOptedInToAsset(this.assetId.value))
	global CurrentApplicationAddress
	byte 0x61737365744964 // "assetId"
	app_global_get
	asset_holding_get AssetBalance
	swap
	pop
	!
	assert

	// contracts/DigitalMarketplace.algo.ts:39
	// verifyPayTxn(mbrTxn, {
	//       receiver: this.app.address,
	//       amount: globals.minBalance + globals.assetOptInMinBalance,
	//     })
	// verify receiver
	frame_dig -1 // mbrTxn: PayTxn
	gtxns Receiver
	global CurrentApplicationAddress
	==
	assert

	// verify amount
	frame_dig -1 // mbrTxn: PayTxn
	gtxns Amount
	global MinBalance
	global AssetOptInMinBalance
	+
	==
	assert

	// contracts/DigitalMarketplace.algo.ts:44
	// sendAssetTransfer({
	//       xferAsset: this.assetId.value,
	//       assetAmount: 0,
	//       assetReceiver: this.app.address,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/DigitalMarketplace.algo.ts:45
	// xferAsset: this.assetId.value
	byte 0x61737365744964 // "assetId"
	app_global_get
	itxn_field XferAsset

	// contracts/DigitalMarketplace.algo.ts:46
	// assetAmount: 0
	int 0
	itxn_field AssetAmount

	// contracts/DigitalMarketplace.algo.ts:47
	// assetReceiver: this.app.address
	global CurrentApplicationAddress
	itxn_field AssetReceiver

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// buy(uint64,pay)void
*abi_route_buy:
	// buyerTxn: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// quantity: uint64
	txna ApplicationArgs 1
	btoi

	// execute buy(uint64,pay)void
	callsub buy
	int 1
	return

// buy(quantity: uint64, buyerTxn: PayTxn): void
//
//
// Metodo para que los usuarios compren assets
//
// @param quantity La cantidad de assets a comprar
// @param buyerTxn Transaccion de pago por la compra de Assets
buy:
	proto 2 0

	// contracts/DigitalMarketplace.algo.ts:60
	// verifyPayTxn(buyerTxn, {
	//       receiver: this.app.address,
	//       sender: this.txn.sender,
	//       amount: this.unitaryPrice.value * quantity,
	//     })
	// verify receiver
	frame_dig -2 // buyerTxn: PayTxn
	gtxns Receiver
	global CurrentApplicationAddress
	==
	assert

	// verify sender
	frame_dig -2 // buyerTxn: PayTxn
	gtxns Sender
	txn Sender
	==
	assert

	// verify amount
	frame_dig -2 // buyerTxn: PayTxn
	gtxns Amount
	byte 0x756e69746172795072696365 // "unitaryPrice"
	app_global_get
	frame_dig -1 // quantity: uint64
	*
	==
	assert

	// contracts/DigitalMarketplace.algo.ts:66
	// sendAssetTransfer({
	//       xferAsset: this.assetId.value,
	//       assetAmount: quantity,
	//       assetReceiver: this.txn.sender,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/DigitalMarketplace.algo.ts:67
	// xferAsset: this.assetId.value
	byte 0x61737365744964 // "assetId"
	app_global_get
	itxn_field XferAsset

	// contracts/DigitalMarketplace.algo.ts:68
	// assetAmount: quantity
	frame_dig -1 // quantity: uint64
	itxn_field AssetAmount

	// contracts/DigitalMarketplace.algo.ts:69
	// assetReceiver: this.txn.sender
	txn Sender
	itxn_field AssetReceiver

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// deleteApplication()void
*abi_route_deleteApplication:
	// execute deleteApplication()void
	callsub deleteApplication
	int 1
	return

// deleteApplication(): void
//
//
// Metodo para cobrar las ganancias de la venta y recuperar los assets no vendidos
deleteApplication:
	proto 0 0

	// contracts/DigitalMarketplace.algo.ts:78
	// assert(this.txn.sender === this.app.creator)
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	pop
	==
	assert

	// contracts/DigitalMarketplace.algo.ts:80
	// sendAssetTransfer({
	//       assetReceiver: this.app.creator,
	//       xferAsset: this.assetId.value,
	//       assetAmount: this.app.address.assetBalance(this.assetId.value),
	//       assetCloseTo: this.app.creator,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/DigitalMarketplace.algo.ts:81
	// assetReceiver: this.app.creator
	txna Applications 0
	app_params_get AppCreator
	pop
	itxn_field AssetReceiver

	// contracts/DigitalMarketplace.algo.ts:82
	// xferAsset: this.assetId.value
	byte 0x61737365744964 // "assetId"
	app_global_get
	itxn_field XferAsset

	// contracts/DigitalMarketplace.algo.ts:83
	// assetAmount: this.app.address.assetBalance(this.assetId.value)
	global CurrentApplicationAddress
	byte 0x61737365744964 // "assetId"
	app_global_get
	asset_holding_get AssetBalance
	pop
	itxn_field AssetAmount

	// contracts/DigitalMarketplace.algo.ts:84
	// assetCloseTo: this.app.creator
	txna Applications 0
	app_params_get AppCreator
	pop
	itxn_field AssetCloseTo

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/DigitalMarketplace.algo.ts:87
	// sendPayment({
	//       receiver: this.app.creator,
	//       amount: this.app.address.balance,
	//       closeRemainderTo: this.app.creator,
	//     })
	itxn_begin
	int pay
	itxn_field TypeEnum

	// contracts/DigitalMarketplace.algo.ts:88
	// receiver: this.app.creator
	txna Applications 0
	app_params_get AppCreator
	pop
	itxn_field Receiver

	// contracts/DigitalMarketplace.algo.ts:89
	// amount: this.app.address.balance
	global CurrentApplicationAddress
	acct_params_get AcctBalance
	pop
	itxn_field Amount

	// contracts/DigitalMarketplace.algo.ts:90
	// closeRemainderTo: this.app.creator
	txna Applications 0
	app_params_get AppCreator
	pop
	itxn_field CloseRemainderTo

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

*create_NoOp:
	method "createApplication(uint64,uint64)void"
	txna ApplicationArgs 0
	match *abi_route_createApplication
	err

*call_NoOp:
	method "setPrice(uint64)void"
	method "optInToAsset(pay)void"
	method "buy(uint64,pay)void"
	txna ApplicationArgs 0
	match *abi_route_setPrice *abi_route_optInToAsset *abi_route_buy
	err

*call_DeleteApplication:
	method "deleteApplication()void"
	txna ApplicationArgs 0
	match *abi_route_deleteApplication
	err